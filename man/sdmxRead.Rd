% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sdmxRead.R
\name{sdmxRead}
\alias{sdmxRead}
\alias{splitSdmxRead}
\alias{exportCodes}
\alias{loadJSON}
\alias{transformData}
\alias{factorLevels}
\alias{names2df}
\alias{assignFactors}
\alias{processFile}
\title{Query Data OECD.Stat}
\usage{
sdmxRead(api = "http://stats.oecd.org/SDMX-JSON", scheme = "data",
  DSD = "BTDIXE_I4", filter = list(COU = c("ESP", "DEU"), FLW = c("IMPO"),
  PAR = c("WOR"), EUC = c("TOTAL", "INT"), IND = c("DTOTAL", "D01T03"), VAL =
  c("VALUE")), append = paste0("/all?", paste("json-lang=en", "detail=Full",
  "dimensionAtObservation=AllDimensions", "startPeriod=2000", "endPeriod=2010",
  sep = "&")), query = FALSE)

splitSdmxRead(id, split_dim, codelist, destdir, start, end)

exportCodes(codelist, destdir, prefix)

loadJSON(loc)

transformData(x, elem = "dataSets", extractNames = FALSE)

factorLevels(x, elem = "structure")

names2df(names, factor_levels)

assignFactors(data, factor_levels)

processFile(loc)
}
\arguments{
\item{api}{an API address}

\item{scheme}{an API scheme. Available schemes \code{data}, \code{codelist}.}

\item{DSD}{a datastructure definition identified by the triplet
\code{[collection; country; indicator]}.}

\item{filter}{for scheme "data": a named list of filters passed to the API.
The position of list items corresponds to the API filter dimensions. Each
list item is either empty (no filter on dimension) or a character vector
containing dimension members to be included in the results. Dimension
members can be obtained from \code{scheme="codelist"} and a codelist item,
e.g. "CL_ECO_ISIC4".}

\item{append}{append string to the dimension url.}

\item{query}{logical to return SDMX http url only.}

\item{id}{member of \code{split_dim}}

\item{split_dim}{dimension to be split}

\item{codelist}{created by \code{sdmxRead} using \code{{codelist}} scheme}

\item{destdir}{local directory to export results}

\item{start}{integer value query start year}

\item{end}{integer value query end year}

\item{prefix}{character string appended to export file}
}
\value{
exporting one json file per dimension member of \code{{split_dim}}

a tab-separated codelist file for each dimension
}
\description{
Query data from OECD.Stat using SDMX

\code{splitSdmxRead}: create query for part of dataset and write to disk

\code{exportCodes}: write codelist to disk
}
\details{
Helper function to efficiently query data from OECD.Stat Extracts using
SDMX-JSON API.

splitSdmxRead(loc, split_dim, codelist, destdir, start, end)

exportCodes(codelist, destdir, prefix)
}
\examples{
\dontrun{
## list dimension members
test.codelist <- sdmxRead(DSD = "BTDIXE_I4", scheme = "codelist")
## retrieve data
filter.list <- list(COU = c("ESP", "DEU"),
                    FLW = c("IMPO"),
                    PAR = c("WOR"),
                    EUC = c("TOTAL", "INT"),
                    IND = c("DTOTAL", "D01T03"),
                    VAL = c("VALUE"))
url.append <- paste0("/all?",
                     paste("json-lang=en", "detail=Full",
                           "dimensionAtObservation=AllDimensions",
                           "startPeriod=1990", "endPeriod=2000",
                           sep = "&"))
test.data <- sdmxRead(DSD = "BTDIXE_I4", filter = filter.list)
}
library(doMC)
registerDoMC(detectCores(logical = TRUE) - 1)
flow <- "TEC7_REV4"
src_id <- tolower(flow)
codelist <- nsoApi::sdmxRead(DSD = flow, scheme = "codelist")
split_dim <- "REPORTER"
namecou <- codelist[[split_dim]][["id"]]
foreach(cou = namecou) \%dopar\% splitSdmxRead(id = cou, codelist = codelist, destdir = file.path(origdir, src_id))
codelist <- nsoApi::sdmxRead(DSD = "TEC7_REV4", scheme = "codelist")
exportCodes(codelist = codelist, destdir = ".", prefix = paste0("_"))
}
\seealso{
https://data.oecd.org/api/sdmx-json-documentation
}
\author{
Bo Werth <bo.werth@gmail.com>
}
\keyword{OECD.Stat,}
\keyword{SDMX}
